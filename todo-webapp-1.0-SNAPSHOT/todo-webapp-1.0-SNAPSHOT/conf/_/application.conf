# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="C7Fu?w]wpxZbnw>0q@kX_e9KbqWmvukAW<M6^``yC>q?OKX`vOC?2HAWbv>Kld8v"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# env vars for github auth
#github.client.id=${GITHUB_AUTH_ID}
#github.client.secret=${GITHUB_AUTH_SECRET}

github.redirect.url="https://github.com/login/oauth/authorize?client_id=%s&redirect_uri=%s&scope=%s&state=%s"

oauth2.client.id=${OAUTH2_CLIENT_ID}
oauth2.client.secret=${OAUTH2_CLIENT_SECRET}
oauth2.endpoints.baseurl=${IDP_BASE_URL}
oauth2.endpoints.authz=${IDP_BASE_URL}"/oauth/nam/authz"
oauth2.endpoints.token=${IDP_BASE_URL}"/oauth/nam/token"
oauth2.endpoints.tokeninfo=${IDP_BASE_URL}"/oauth/nam/tokeninfo"
oauth2.endpoints.userinfo=${IDP_BASE_URL}"/oauth/nam/userinfo"
oauth2.endpoints.metadata=${IDP_BASE_URL}"/oauth/nam/.well-known/openid-configuration"

oauth2.adminconsole.url=${ADMIN_CONSOLE_URL}

ws.acceptAnyCertificate = true
#service.todo.url = "http://todoservice.sktest.com:"${TODO_SERVICE_PORT}
service.todo.url = "http://"${TODO_SERVICE_HOST}":"${TODO_SERVICE_PORT}


https.port=9443
ssl.KeyManagerFactory.algorithm=SunX509
keystore.algorithm=JKS
keystore.alias=tomcat
keystore.password=changeit
keystore.file=certificate.jks